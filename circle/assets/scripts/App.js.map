{"version":3,"sources":["../../../src/assets/scripts/App.js"],"names":[],"mappings":";;;;;;;;;;;QAEqB,GAAG;AACT,iBADM,GAAG,GACN;kCADG,GAAG;;AAEhB,gBAAI,CAAC,cAAc,EAAE,CAChB,cAAc,EAAE,CAAC;SACzB;;;;;;;;;;;;;qBAJgB,GAAG;;mBAgBN,0BAAG;AACb,oBAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;;AAE5D,uBAAO,IAAI,CAAC;aACf;;;mBAEa,0BAAG;;;;;;AACb,yCAAyB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,8HAAE;4BAA1C,YAAY;;AACjB,4BAAI,CAAC,cAAc,GAAG,2BAAe,YAAY,CAAC,CAAC;qBACtD;;;;;;;;;;;;;;;;AAED,uBAAO,IAAI,CAAC;aACf;;;eA5BgB,GAAG;;;qBAAH,GAAG","file":"App.js","sourcesContent":["import CircleView from './views/CircleView';\n\nexport default class App {\n    constructor() {\n        this.createChildren()\n            .initCircleView();\n    }\n\n    /**\n     * Create Children\n     *\n     * Cache DOM selectors as properties of the\n     * constructor for public use.\n     *\n     * @public\n     * @chainable\n     * @method createChildren\n     */\n    createChildren() {\n        this.circles = document.getElementsByClassName('js-circle');\n\n        return this;\n    }\n\n    initCircleView() {\n        for (let singleCircle of Array.from(this.circles)) {\n            this.CircleInstance = new CircleView(singleCircle);\n        }\n\n        return this;\n    }\n}\n"]}