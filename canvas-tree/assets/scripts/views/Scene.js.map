{"version":3,"sources":["../../../../src/assets/scripts/views/Scene.js"],"names":[],"mappings":"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","file":"Scene.js","sourcesContent":["export default class Scene {\n  constructor(element) {\n    /**\n     * Flag to indicate whether the module has been enabled\n     *\n     * @property isEnabled\n     * @type {Boolean}\n     * @default false\n     */\n    this.isEnabled = false;\n\n    /**\n     * Primary jQuery Element\n     *\n     * @property element\n     * @type {jQuery}\n     */\n    this.element = element;\n\n    if (this.element.getContext) {\n      this.ctx = this.element.getContext('2d');\n      this.init();\n    } else {\n      alert(\"Your browser doesn't support canvas\");\n    }\n\n  }\n\n  // Alias prototype\n  // var proto = Scene.prototype;\n\n  /**\n   * Init\n   *\n   * Top level function which kicks off\n   * functionality of the constructor\n   *\n   * @public\n   * @chainable\n   * @method init\n   */\n  init() {\n\n    this.setScene()\n      .initSun()\n      .initClouds()\n      .initHills()\n      .drawLoop()\n      // .initTree()\n      .enable();\n\n    return this;\n  }\n\n  /**\n   * Enable\n   *\n   * Event listeners and any other calls required to\n   * make the constructor work properly.\n   *\n   * @public\n   * @chainable\n   * @method enable\n   */\n  enable() {\n    if (this.isEnabled) {\n      return this;\n    }\n\n    this.isEnabled = true;\n\n    return this;\n  }\n\n  /**\n   * Disables the view\n   * Tears down any event binding to handlers\n   * Exits early if it is already disabled\n   *\n   * @method disable\n   * @chainable\n   */\n  disable() {\n    if (!this.isEnabled) {\n      return this;\n    }\n\n    this.isEnabled = false;\n\n    return this;\n  }\n\n  /**\n   * Destroys the view\n   * Tears down any events, handlers, elements\n   * Should be called when the object should be left unused\n   *\n   * @method destroy\n   * @chainable\n   */\n  destroy() {\n    this.disable();\n\n    for (var key in this) {\n      if (this.hasOwnProperty(key)) {\n        this[key] = null;\n      }\n    }\n\n    return this;\n  }\n\n  /***************\n  Bringing all the draw looping together\n  ***************/\n  drawLoop() {\n    this.drawScene()\n      .animSun()\n      .drawLand()\n      .animClouds()\n      .drawHills();\n\n    setTimeout(function() {\n      window.requestAnimationFrame(this.drawLoop.bind(this));\n    }.bind(this), 1000 / this.fps)\n\n    return this;\n  }\n\n\n  /*********************\n  Scenery\n  *********************/\n  setScene() {\n    this.element.height = 500;\n\n    var windowWidth = window.innerWidth;\n\n    // 16 is the body left and right margin\n    this.element.width = windowWidth <= 768 ? windowWidth - 16 : windowWidth - 100;\n\n    this.landHeight = 100;\n\n    this.skyHeight = this.element.height - this.landHeight;\n\n    this.skyColor = 'rgba(0,206,250,0.8)'; // animate the opacity of this color for transition between day and night\n\n    this.fps = 60;\n\n    this.drawScene();\n\n    return this;\n  }\n\n  drawScene() {\n    // Clear everything as this is always the beginng of each frame\n    this.ctx.clearRect(0, 0, this.element.width, this.element.height);\n\n    // Sky\n    this.ctx.fillStyle = this.skyColor;\n    this.ctx.beginPath();\n    this.ctx.fillRect(0, 0, this.element.width, this.element.height - this.landHeight);\n\n    return this;\n  }\n\n  drawLand() {\n    // Land\n    this.ctx.fillStyle = '#FF941c';\n    this.ctx.beginPath();\n    this.ctx.fillRect(0, this.element.height - this.landHeight, this.element.width, this.element.height);\n\n    return this;\n  }\n\n\n  /*********************\n  Clouds\n  *********************/\n  initClouds() {\n    // clouds seed\n    this.clouds = [{\n      xPos: 25,\n      yPos: 50,\n      velocity: .2,\n      behind: Math.floor(Math.random() * 2) == 1 ? true : false\n    }, {\n      xPos: this.element.width / 2,\n      yPos: 80,\n      velocity: .4,\n      behind: Math.floor(Math.random() * 2) == 1 ? true : false\n    }, {\n      xPos: this.element.width - 70,\n      yPos: 50,\n      velocity: .6,\n      behind: Math.floor(Math.random() * 2) == 1 ? true : false\n    }];\n\n    this.drawClouds(true);\n\n    return this;\n  }\n\n  makeCloud() {\n    var cloud = {\n      xPos: -80,\n      yPos: Math.floor(Math.random() * (100 - 50) + 50),\n      velocity: Math.random() * (0.6 - 0.2) + 0.2,\n      behind: Math.floor(Math.random() * 2) == 1 ? true : false\n    };\n\n    this.clouds.push(cloud);\n\n    this.drawCloud(cloud);\n\n    return this;\n  }\n\n  drawCloud(cloud) {\n    this.ctx.fillStyle = 'rgba(255, 255, 255, 0.9';\n    this.ctx.strokewidth = 0;\n    this.ctx.beginPath();\n\n    var xPos = cloud.xPos;\n\n    for (var i = 0; i < 5; i++) {\n      var altY = i % 2 === 0 ? cloud.yPos : cloud.yPos - 15;\n      this.ctx.arc(xPos, altY, 20, 0, Math.PI * 2, false);\n      xPos += 15;\n    }\n\n    this.ctx.fill();\n\n    return this;\n  }\n\n  // I bet there's a better way to just do the clouds with behind true\n  // Check also at end of drawHills where the false ones get drawn\n  drawClouds(boolean) {\n    if (boolean) {\n      for (let cloud of this.clouds) {\n        if (cloud.behind === true) {\n          this.drawCloud(cloud);\n        }\n      }\n    } else {\n      for (let cloud of this.clouds) {\n        if (cloud.behind === false) {\n          this.drawCloud(cloud);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  animClouds() {\n    for (let cloud of this.clouds) {\n      cloud.xPos += cloud.velocity;\n      if (cloud.xPos - 20 > this.element.width) {\n        var index = this.clouds.indexOf(cloud);\n        this.clouds.splice(index, 1);\n        setTimeout(function() {\n          this.makeCloud();\n        }.bind(this), Math.random() * (4000 - 1000) + 1000)\n      }\n    }\n\n    this.drawClouds(true);\n\n    return this;\n  }\n\n\n\n\n  /*********************\n  Sun\n  *********************/\n  initSun() {\n    this.sun = {\n      xPos: this.element.width - 75,\n      yPos: 75,\n      percent: 0,\n      radius: 50,\n      rising: false\n    };\n\n    this.drawSun();\n\n    return this;\n  }\n\n  drawSun() {\n    this.ctx.fillStyle = '#FF0';\n    this.ctx.strokewidth = 0;\n    this.ctx.beginPath();\n    this.ctx.arc(this.sun.xPos, this.sun.yPos, this.sun.radius, 0, Math.PI * 2, false);\n    this.ctx.fill();\n\n    return this;\n  }\n\n  animSun() {\n    this.sun.percent = this.sun.percent > 1 ? 0 : this.sun.percent + .001;\n\n    var xy = this.getQuadraticBezierXYatPercent({\n      x: -100,\n      y: this.element.height * 1.5\n    }, {\n      x: this.element.width / 2,\n      y: -this.skyHeight * 2\n    }, {\n      x: this.element.width + 100,\n      y: this.element.height * 1.5\n    })\n\n    this.sun.xPos = xy.x;\n    this.sun.yPos = xy.y;\n\n    if (this.sun.rising && this.sun.yPos < -this.sun.radius - 5) {\n      this.sun.rising = false;\n      this.sun.xPos = this.element.width - 75;\n    } else if (!this.sun.rising && this.sun.yPos > this.skyHeight + this.sun.radius * 2) {\n      this.sun.rising = true;\n      this.sun.xPos = 75;\n    }\n\n    this.drawSun();\n\n    this.updateSkyColor();\n\n    return this;\n  }\n\n  getQuadraticBezierXYatPercent(startPt, controlPt, endPt) {\n    var x = Math.pow(1 - this.sun.percent, 2) * startPt.x + 2 * (1 - this.sun.percent) * this.sun.percent * controlPt.x + Math.pow(this.sun.percent, 2) * endPt.x;\n    var y = Math.pow(1 - this.sun.percent, 2) * startPt.y + 2 * (1 - this.sun.percent) * this.sun.percent * controlPt.y + Math.pow(this.sun.percent, 2) * endPt.y;\n    return ({\n      x: x,\n      y: y\n    });\n  }\n\n  updateSkyColor() {\n    var skyOpacity = 1 - (this.sun.yPos / (this.skyHeight + (this.sun.radius * 2)));\n\n    if (skyOpacity >= 1) {\n      skyOpacity = 1;\n    } else if (skyOpacity <= 0) {\n      skyOpacity = 0;\n    }\n\n    this.skyColor = `rgba(0,206,250,${skyOpacity})`\n\n    return this;\n  }\n\n\n\n  /*********************\n  Hills\n  *********************/\n  initHills() {\n    // Hills properties set on initialization\n    this.hill = {\n      hillWidth: Math.random() * (70 - 50) + 50,\n      hillWidthHalf: 0,\n      xPos: Math.random() * (this.element.width / 2 - 20) + 20,\n      small: Math.random() * (0.15 - 0.05) + 0.05,\n      med: Math.random() * (0.3 - 0.2) + 0.2,\n      large: Math.random() * (0.85 - 0.7) + 0.7,\n      hillHeights: [],\n      midway: 0\n    }\n\n    this.hill.hillWidthHalf = this.hill.hillWidth / 2;\n\n    this.hill.hillHeights = [{\n      full: this.skyHeight * this.hill.med,\n      relative: -this.skyHeight * this.hill.med\n    }, {\n      full: (this.skyHeight * this.hill.med) + this.hill.hillWidthHalf,\n      relative: 0\n    }, {\n      full: this.skyHeight * this.hill.large,\n      relative: -((this.skyHeight * this.hill.large) - ((this.skyHeight * this.hill.med) + this.hill.hillWidth))\n    }, {\n      full: (this.skyHeight * this.hill.large) - this.hill.hillWidthHalf,\n      relative: ((this.skyHeight * this.hill.large) - this.hill.hillWidthHalf) - ((this.skyHeight * this.hill.small) + this.hill.hillWidthHalf)\n    }, {\n      full: this.skyHeight * this.hill.small,\n      relative: this.skyHeight * this.hill.small\n    }];\n\n    this.hill.midway = Math.floor(this.hill.hillHeights.length / 2);\n\n    this.drawHills();\n\n    return this;\n  }\n\n  drawHills() {\n    var xPos = this.hill.xPos;\n    var yPos = this.skyHeight;\n\n    this.ctx.fillStyle = '#069611';\n    this.ctx.strokewidth = 2;\n    this.ctx.strokeStyle = '#000';\n\n    this.ctx.beginPath();\n    for (var i = 0, j = this.hill.hillHeights.length; i < j; i++) {\n      this.ctx.moveTo(xPos, yPos);\n      if (i <= this.hill.midway) {\n        // First half\n        yPos += this.hill.hillHeights[i].relative;\n        this.ctx.lineTo(xPos, yPos);\n      }\n\n      this.ctx.arc(xPos + this.hill.hillWidthHalf, yPos, this.hill.hillWidthHalf, Math.PI, 0, false);\n      this.ctx.fillRect(xPos, yPos - 1, this.hill.hillWidth, this.hill.hillHeights[i].full);\n\n      this.ctx.moveTo(xPos + this.hill.hillWidthHalf - 5, yPos - (this.hill.hillWidthHalf / 2) - 4);\n      this.ctx.lineTo(xPos + this.hill.hillWidthHalf - 5, yPos - (this.hill.hillWidthHalf / 2) + 4);\n      this.ctx.moveTo(xPos + this.hill.hillWidthHalf + 5, yPos - (this.hill.hillWidthHalf / 2) - 4);\n      this.ctx.lineTo(xPos + this.hill.hillWidthHalf + 5, yPos - (this.hill.hillWidthHalf / 2) + 4);\n\n      xPos += this.hill.hillWidthHalf;\n\n      if (i < this.hill.midway) {\n        yPos -= this.hill.hillWidthHalf;\n      } else if (i === this.hill.midway) {\n        yPos += this.hill.hillWidthHalf;\n      } else {\n        xPos += this.hill.hillWidthHalf;\n        this.ctx.moveTo(xPos, yPos);\n        yPos += this.hill.hillHeights[i].relative;\n        this.ctx.lineTo(xPos, yPos);\n        xPos -= this.hill.hillWidthHalf;\n        yPos += this.hill.hillWidthHalf;\n      }\n    }\n\n    this.ctx.fill();\n    this.ctx.stroke();\n\n    this.drawClouds(false);\n\n    return this;\n  }\n\n\n  /*********************\n  Tree\n  *********************/\n  initTree() {\n    this.baseWidth = 20;\n    this.branchCount = 1;\n    this.currentStrokeWidth = this.baseWidth;\n\n    // Lower rateOfGrowth allows for a higher branchLength\n    // lower rateOfGrowth means the branchSpread should\n    // be lower as well to keep it from getting too wide\n    this.branchLength = 0;\n    this.rateOfGrowth = 0;\n    this.branchSpread = 0;\n    this.animationRequests = [];\n\n    this.branches = [{\n      xPos: (this.element.width - this.baseWidth) / 2,\n      yPos: this.element.height - (this.landHeight / 2),\n      startTime: null\n      // branchLength: Math.random() * (0.8 - 0.3) + 0.3\n    }];\n\n    // In general, a higher rateOfGrowth means branchLength would\n    // need to be shorter and thus branchSpread can be larger\n\n    // How long a branch is with respect to the amount of time\n    // it takes to grow it\n    this.branchLength = 250;\n\n    // upwards velocity. branches will be longer because same amount of\n    // time is spent growing a branch\n    this.rateOfGrowth = 1;\n\n    //higher the number, the wider the branches shoot out\n    this.branchSpread = 1;\n\n    this.drawTree();\n\n    return this;\n  }\n\n  drawTree() {\n    var request = window.requestAnimationFrame(this.taperedTrunk.bind(this, 0));\n    this.animationRequests.push(request);\n\n    return this;\n  }\n\n  splitBranch() {\n    this.cancelAllAnimationRequests();\n\n    for (var i = this.branchCount - 1; i >= 0; i--) {\n      this.branches[i].startTime = null;\n\n      var newBranch = {\n        xPos: this.branches[i].xPos,\n        yPos: this.branches[i].yPos,\n        startTime: null\n        // branchLength: Math.random() * (0.8 - 0.3) + 0.3\n      };\n      this.branches.push(newBranch);\n    }\n\n    this.branchCount = this.branches.length;\n    this.currentStrokeWidth *= (2 / 3);\n    this.branchLength *= (2 / 3);\n\n    for (var i = this.branchCount - 1; i >= 0; i--) {\n      var request = window.requestAnimationFrame(this.taperedTrunk.bind(this, i));\n      this.animationRequests.push(request);\n    }\n\n    return this;\n  }\n\n  taperedTrunk(branchIndex, timestamp) {\n    if (!this.branches[branchIndex].startTime) this.branches[branchIndex].startTime = timestamp;\n    var elapsedTime = timestamp - this.branches[branchIndex].startTime;\n    var endTime = this.baseWidth * this.branchLength;\n\n    var subtractedAmount = (elapsedTime / endTime) * 4;\n\n    this.ctx.lineWidth = this.currentStrokeWidth - subtractedAmount;\n    this.ctx.strokeStyle = '#825201';\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.branches[branchIndex].xPos, this.branches[branchIndex].yPos)\n\n    this.branches[branchIndex].yPos -= (Math.random() * this.rateOfGrowth);\n\n    if (branchIndex === 0 && this.branchCount === 1) {\n      var newX = Math.random() * 0.5;\n      newX *= Math.floor(Math.random() * 2) == 1 ? 1 : -1;\n      this.branches[branchIndex].xPos += newX;\n    } else if (branchIndex < this.branchCount / 2) {\n      this.branches[branchIndex].xPos -= (Math.random() * this.branchSpread);\n    } else if (branchIndex >= this.branchCount / 2) {\n      this.branches[branchIndex].xPos += (Math.random() * this.branchSpread);\n    }\n\n    this.ctx.lineTo(this.branches[branchIndex].xPos, this.branches[branchIndex].yPos);\n    this.ctx.stroke();\n\n    if (this.currentStrokeWidth < 0.2 || this.branchCount >= 64) {\n      this.cancelAllAnimationRequests();\n    } else if (elapsedTime >= endTime * (5 / 8)) {\n      this.splitBranch();\n    } else if (elapsedTime < endTime * (5 / 8)) {\n      var request = window.requestAnimationFrame(this.taperedTrunk.bind(this, branchIndex));\n      this.animationRequests.push(request);\n    }\n\n    return this;\n  }\n\n  animTreeGrowth(index) {\n    var request = window.requestAnimationFrame(this.animTreeGrowth.bind(this));\n    this.animationRequests.push(request);\n    var timestamp = new Date().getTime();\n    this.taperedTrunk(index, timestamp);\n\n    return this;\n  }\n\n  cancelAllAnimationRequests() {\n    for (var i = this.animationRequests.length - 1; i >= 0; i--) {\n      window.cancelAnimationFrame(this.animationRequests[i]);\n    }\n    this.animationRequests = [];\n\n    return this;\n  }\n\n}\n"]}