{"version":3,"sources":["../../../../src/assets/scripts/components/SlipnSlider.js"],"names":[],"mappings":"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","file":"SlipnSlider.js","sourcesContent":["// TODO: setup form fields for customizing the slider\n\nexport default class SlipnSlider {\n  constructor(element, options) {\n    /**\n     * Flag for detecting if slider is enabled\n     * @type {Boolean}\n     * @default false\n     */\n    this.isEnabled = false;\n\n    /**\n     * The list of options able to be set by user on slider\n     * creation. If any property is left unset, it will default\n     * to the option specified here.\n     * @type {Object}\n     */\n    this.optionableProperties = {\n      isInfinite: false,\n      hasDotNav: true,\n      slidePadding: 0,\n      navContainer: '.slipnslider',\n      dotsContainer: '.slipnslider',\n      slideElement: 'div',\n      stageElement: 'div'\n    }\n\n    /**\n     * User options object of settable properties\n     * @type {Object}\n     */\n    this.options = options;\n\n    /**\n     * Class of the slider istance for selecting slider element\n     * @type {String}\n     */\n    this.slider = element;\n\n    /**\n     * The amount of slides in slider\n     * @type {Number}\n     */\n    this.total = 0;\n\n    /**\n     * Calculation of the width of each slide in percent\n     * @type {Number}\n     */\n    this.percent = 0;\n\n    /**\n     * Index number of the current active slide\n     * @type {Number}\n     * @default 0\n     */\n    this.activeSlideIndex = 0;\n\n    /**\n     * Index number of the current active nav dot\n     * @type {Number}\n     * @default 0\n     */\n    this.activeDotIndex = 0;\n\n    /**\n     * Determines type of event based of device type\n     * Either touch or mouse event\n     * @type {Event Handler}\n     */\n    this.pressStart = ('ontouchstart' in window) ? \"touchstart\" : \"mousedown\";\n\n    /**\n     * Determines type of event based of device type\n     * Either touch or mouse event\n     * @type {Event Handler}\n     */\n    this.pressEnd = ('ontouchend'   in window) ? \"touchend\"   : \"mouseup\";\n\n    /**\n     * Determines type of event based of device type\n     * Either touch or mouse event\n     * @type {Event Handler}\n     */\n    this.pressMove = ('ontouchmove'  in window) ? \"touchmove\"  : \"mousemove\";\n\n    /**\n     * Flag for determining if slide is transitioning\n     * to another slide\n     * @type {Boolean}\n     * @default false\n     */\n    this.isTransitioning = false;\n\n    /**\n     * Classname for adding visibility of dots\n     * @type {String - CSS class}\n     */\n    this.dotIsActive = \"slipnslider__active\";\n\n    /**\n     * Accurate vendor prefix for adding event listener\n     * for transitionEnd event. From Modernizr\n     * @type {String}\n     */\n    this.transitionEndPrefix = this.transitionEndEvent();\n\n    /**\n     * Vendor prefix for transition\n     * @type {String}\n     */\n    this.transitionPrefix = this.transitionPrefix();\n\n    /**\n     * Vendor prefix for transform\n     * @type {String}\n     */\n    this.transformPrefix = this.transformPrefix();\n\n    /**\n     * The Y position of the touch point to maintain\n     * scrolling on touch devices\n     * @type {Number}\n     * @default 0\n     */\n    this.curYPos = 0;\n\n    /**\n     * Caches the value of the x coordinate\n     * when the user clicks/touches to drag slider\n     * @type {Number}\n     * @default 0\n     */\n    this.startpoint = 0;\n\n    /**\n     * Flag for determining if slider is being dragged\n     * @type {Boolean}\n     * @default false\n     */\n    this.isDragging = false;\n\n    /**\n     * Minimum pixel amount to drag slider to\n     * initiate slide change. Gets set to 25% of the\n     * stage width\n     * @type {Number}\n     * @default 30\n     */\n    this.dragThreshold = 30;\n  }\n\n  // =========================================================\n  // On Initialization functions\n  // =========================================================\n  /**\n   * Parses through the options object provided by the user\n   * and sets the properties accordingly. Verifies that option\n   * is one that can be set by the user and checks the typeof\n   * the option for proper and desired behaviour.\n   * @return {SlipnSlider}\n   */\n  takeUserOptions() {\n    this.options = this.options || {};\n    for (let option in this.optionableProperties) {\n      if (this.optionableProperties[option] !== undefined && typeof this.optionableProperties[option] === typeof this.options[option]) {\n        this[option] = this.options[option];\n      } else {\n        this[option] = this.optionableProperties[option];\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Clones the first and last slide and appends each\n   * to the opposite end of the slider to have that\n   * oh so pleasurable infinite feel. Updates the values\n   * of the slide elements, total count, percent width,\n   * and sets the activeSlideIndex to 1.\n   * @return {SlipnSlider}\n   */\n  setupInfiniteSlider() {\n    if (!this.isInfinite || this.total === 1) {\n      return this;\n    }\n\n    let firstSlide  = this.slides[0].cloneNode(true);\n    let lastSlide   = this.slides[this.total - 1].cloneNode(true);\n    this.stage.appendChild(firstSlide);\n    this.stage.insertBefore(lastSlide, this.slides[0]);\n    this.slides     = this.stage.children;\n    this.total      = this.slides.length;\n    this.percent    = 100 / this.total;\n    this.activeSlideIndex = 1;\n\n    return this;\n  }\n\n  /**\n   * Adds data attributes to the slides of an index\n   * number that corresponds with a dot.\n   * @return {SlipnSlider}\n   */\n  setDataAttrs() {\n    for (let i = 0; i < this.total; i++) {\n      this.slides[i].dataset.jsSlideIndex = i;\n    }\n    return this;\n  }\n\n  /**\n   * Wraps the slides with the stage and appends it\n   * to the slider. Updates the values of slide elements,\n   * total count, percentage, and sets the width of the slides.\n   * @return {SlipnSlider}\n   */\n  setStage() {\n    this.stage = document.createElement(this.stageElement);\n    this.stage.className = \"slipnslider__stage\";\n    this.slides = this.slider.children;\n    this.total = this.slides.length;\n    this.percent = 100 / this.total;\n    for (let i = 0; i < this.total; i++) {\n      let slide  = document.createElement(this.slideElement);\n      for (let j = 0, h = this.slides[0].children.length; j < h; j++) {\n        slide.appendChild(this.slides[0].children[0]);\n      }\n      this.slides[0].remove();\n      slide.style.width = `${this.percent}%`;\n      this.stage.appendChild(slide);\n    }\n    this.slides = this.stage.children;\n    this.slider.appendChild(this.stage);\n    this.stage = this.slider.children[0];\n\n    return this;\n  }\n\n  /**\n   * Creates the DOM elements with instance-specific class names\n   * for dot navigation. Sets active class to current slide and\n   * appends dotNav to the slider\n   * @return {SlipnSlider}\n   */\n  createDots(element) {\n    if (!this.hasDotNav || this.total === 1) {\n      return this;\n    }\n    let targetElement = document.querySelector(this.dotsContainer);\n\n    this.dotNav = document.createElement(\"ul\");\n    this.dotNav.className = \"slipnslider__dot-nav\";\n    for ( let i = 0; i < this.total; i++ ) { this.dotNav.appendChild(document.createElement(\"li\")); }\n    this.navDots = this.dotNav.querySelectorAll(\"li\");\n    this.activeDot = this.navDots[this.activeSlideIndex];\n    this.activeDot.className = this.dotIsActive;\n    targetElement.appendChild(this.dotNav);\n\n    return this;\n  }\n\n  /**\n   * Searches for an optionally provided element to\n   * append controls wrapper to. Creates a controls\n   * wrapping element and appends the prev and next\n   * buttons as children and caches them as properties\n   * of the slider.\n   * @param  {String} element CSS Selector for desired element to append controls\n   * @return {SlipnSlider}\n   */\n  createControls(element) {\n    let targetElement = document.querySelector(this.navContainer);\n    let controlsWrapper = document.createElement(\"div\");\n    controlsWrapper.className = \"slipnslider__controls\";\n    this.prevBtn = document.createElement(\"button\");\n    this.prevBtn.className = \"slipnslider__prev\";\n    this.prevBtn.type = \"button\";\n    this.prevBtn.innerText = \"prev\";\n    this.nextBtn = document.createElement(\"button\");\n    this.nextBtn.className = \"slipnslider__next\";\n    this.nextBtn.type = \"button\";\n    this.nextBtn.innerText = \"next\";\n    controlsWrapper.appendChild(this.prevBtn);\n    controlsWrapper.appendChild(this.nextBtn);\n    targetElement.appendChild(controlsWrapper);\n\n    return this;\n  }\n\n  /**\n   * Ensures accurate context of this is passed to the event\n   * handlers\n   * @return {SlipnSlider}\n   */\n  addEventHandlers() {\n    this.onNextClickHandler = this.moveToAdjacentSlide.bind(this, true);\n    this.onPrevClickHandler = this.moveToAdjacentSlide.bind(this, false);\n    this.onDotClickHandler  = this.onDotClick.bind(this);\n    this.onDragStartHandler = this.onDragStart.bind(this);\n    this.onDragHandler      = this.onDrag.bind(this);\n    this.offDragHandler     = this.offDrag.bind(this);\n    return this;\n  }\n\n  /**\n   * Enables the slider and adds the event listeners\n   * @return {SlipnSlider}\n   */\n  enable() {\n    if (this.isEnabled) { return this; }\n\n    this.isEnabled = true;\n\n    this.nextBtn.addEventListener(\"click\", this.onNextClickHandler);\n    this.prevBtn.addEventListener(\"click\", this.onPrevClickHandler);\n    if (this.hasDotNav) {\n      for (let i = 0, j = this.navDots.length; i < j; i++) {\n        this.navDots[i].addEventListener(\"click\", this.onDotClickHandler)\n      }\n    }\n    this.stage.addEventListener(this.pressStart, this.onDragStartHandler);\n    window.addEventListener(this.pressMove, this.onDragHandler);\n    window.addEventListener(this.pressEnd, this.offDragHandler);\n    window.onresize = function(){this.defineSizes()}.bind(this);\n\n    return this;\n  }\n\n  /**\n   * Disables the slider by removing the event listeners\n   * and restores the slider to initial state before\n   * intialization of the slider\n   * @return {SlipnSlider}\n   */\n  disable() {\n    if (!this.isEnabled) { return this; }\n\n    this.isEnabled = false;\n\n    this.nextBtn.removeEventListener(\"click\", this.onNextClickHandler);\n    this.prevBtn.removeEventListener(\"click\", this.onPrevClickHandler);\n    if (this.hasDotNav) {\n      for (let i = 0, j = this.navDots.length; i < j; i++) {\n        this.navDots[i].removeEventListener(\"click\", this.onDotClickHandler)\n      }\n    }\n    this.stage.removeEventListener(this.pressStart, this.onDragStartHandler);\n    this.stage.removeEventListener(this.pressMove, this.onDragHandler);\n    window.removeEventListener(this.pressEnd, this.offDragHandler);\n\n    this.removeCreatedElements();\n\n    return this;\n  }\n\n  /**\n   * Removes all the created elements from initialization\n   * and restores intial states.\n   * @return {SlipnSlider}\n   */\n  removeCreatedElements() {\n    this.prevBtn.parentElement.remove();\n    if (this.hasDotNav) { this.dotNav.remove(); }\n\n    if (this.isInfinite) {\n      // need to remove the last one first otherwise the this.total\n      // number wont be accurate\n      this.slides[this.total - 1].remove();\n      this.slides[0].remove();\n      this.total -= 2;\n    }\n\n    for (let i = 0, j = 0; i < this.total; i++) {\n      this.slides[j].style.width = \"100%\";\n      this.slider.appendChild(this.slides[j]);\n    }\n    this.stage.remove();\n    this.slider.display = \"none\";\n    return this;\n  }\n\n  // =========================================================\n  // Event Listeners\n  // =========================================================\n\n  /**\n   * Sets the width of the slider stage as well as\n   * the contained slides\n   * @return {SlipnSlider}\n   */\n  defineSizes() {\n    this.stage.style.width = `${this.slider.offsetWidth * this.total}px`;\n    this.dragThreshold = this.slider.offsetWidth / 4;\n    Array.prototype.forEach.call(this.slides, (slide) => {\n      slide.style.width = `${this.percent}%`;\n    });\n    return this;\n  }\n\n  /**\n   * Navigates the slider to an adjacent slide. Wraps\n   * to opposite end if slider is not in infinite mode\n   * and default behaviour is to increment or decrement\n   * based on value of direction.\n   * @param  {Boolean} direction True navigates forward and False navigates backwards\n   * @param  {Event Obj} e       Optional event data\n   * @return {SlipnSlider}\n   */\n  moveToAdjacentSlide(direction, e) {\n    if (this.isTransitioning) { return this; }\n    this.onTransitionStart();\n    if (!this.isInfinite) {\n      if (direction && this.atLastSlide()) {\n        this.activeSlideIndex = 0;\n      } else if (!direction && this.atFirstSlide()) {\n        this.activeSlideIndex = this.total - 1;\n      } else {\n        direction ? this.activeSlideIndex++ : this.activeSlideIndex--;\n      }\n    } else {\n      direction ? this.activeSlideIndex++ : this.activeSlideIndex--;\n    }\n    this.navigateToSlide();\n    return this;\n  }\n\n  /**\n   * Finds the slide to navigate to corresponding to the\n   * index number of the clicked dot. Sets the activeSlideIndex\n   * to the target slide index.\n   * @param  {Event Obj} e Event click data\n   * @return {SlipnSlider}\n   */\n  onDotClick(e) {\n    e.preventDefault();\n    if (this.isTransitioning) { return this; }\n    let dotIndex = Array.prototype.indexOf.call(this.navDots, e.currentTarget);\n    if (dotIndex === this.activeDotIndex) {\n      return this;\n    }\n    this.onTransitionStart();\n\n    // Using querySelectorAll because multiple can turn up if isInfinite\n    let slideSelections = this.stage.querySelectorAll(`[data-js-slide-index=\"${dotIndex}\"]`);\n\n    if (this.isInfinite && slideSelections.length > 1) {\n      // if the first dot is clicked, that is fine to navigate to.\n      // The alternative is the last dot was clicked which would result in the\n      // first cloned slide to be the first element from the querySelectorAll\n      // so we want to use the second element from slideSelections\n      slideSelections = dotIndex === 0 ? slideSelections[0] : slideSelections[1];\n    } else {\n      // Dont have to worry about cloned slides\n      slideSelections = slideSelections[0];\n    }\n\n    this.activeSlideIndex = Array.prototype.indexOf.call(this.slides, slideSelections);\n\n    this.navigateToSlide();\n\n    return this;\n  }\n\n  /**\n   * Event listener for the start of dragging the slider. Stores the\n   * current x coordinate and the y coordinate of device is a touch device\n   * so that scrolling is still possible.\n   * @param  {Event Obj} e Event touch/click data\n   * @return {SlipnSlider}\n   */\n  onDragStart(e) {\n    e.preventDefault();\n    if (this.isTransitioning) { return this; }\n    this.removeStageTransition();\n    this.startpoint = e.pageX;\n    this.isDragging = true;\n\n    if (this.pressStart == \"touchstart\") {\n      this.curYPos = e.pageY;\n    }\n\n    return this;\n  }\n\n  /**\n   * Handles moving the slider according to users movements\n   * and scrolling if on a touch device. Prevents slider\n   * from moving beyond the first and last slide if not\n   * in infinite mode.\n   * @param  {Event Obj} e Event Drag data\n   * @return {SlipnSlider}\n   */\n  onDrag(e) {\n    e.preventDefault();\n    if (this.isTransitioning || !this.isDragging) { return this; }\n\n    if (this.pressMove === \"touchmove\") {\n      window.scrollTo(document.body.scrollLeft, document.body.scrollTop + (this.curYPos - e.pageY));\n    }\n\n    let currentPos = (this.activeSlideIndex) * -this.percent;\n    let movePos   = (currentPos + ((this.startpoint - e.pageX) * 0.03) * -1);\n    if (!this.isInfinite) {\n      if (movePos >= 0) {\n        movePos = 0;\n      } else if (movePos <= (100 - 100/this.total) * -1) {\n        movePos = (100 - 100/this.total) * -1;\n      }\n    }\n\n    this.stage.style[this.transformPrefix] = `translate3d(${movePos}%, 0, 0)`;\n\n    return this;\n  }\n\n  /**\n   * Reinstantiates the stage transition and determines\n   * if and which slide to move to based on the ending\n   * x coordinate and the startpoint\n   * @param  {Event Obj} e Event data from touchup/mouseup\n   * @return {SlipnSlider}\n   */\n  offDrag(e) {\n    e.preventDefault();\n    if (!this.isDragging) { return this; }\n    this.isDragging = false;\n    this.stage.style[this.transitionPrefix] = \"all .75s\";\n    let travelled = this.startpoint - e.pageX;\n    if (Math.abs(travelled) >= this.dragThreshold) {\n      (travelled < 0) ? this.moveToAdjacentSlide(false) : this.moveToAdjacentSlide(true);\n    } else {\n      this.navigateToSlide();\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets isTransitioning flag to true to disable\n   * user interaction\n   * @return {SlipnSlider}\n   */\n  onTransitionStart() {\n    this.isTransitioning = true;\n    return this;\n  }\n\n  /**\n   * Listener for resetting the isTransitioning\n   * flag to false after slider is finished making\n   * its' way to the target slide\n   * @return {SlipnSlider}\n   */\n  onTransitionEnd() {\n    this.isTransitioning = false;\n    if (this.isInfinite) {\n      this.checkForSlideSwap();\n    }\n\n    return this;\n  }\n\n  /**\n   * Binds the transition end event to the stage and executes an\n   * optional callback function\n   * @param  {Function} callback Optional callback to execute on transition completion\n   * @return {SlipnSlider}\n   */\n  bindTransitionEvents(callback) {\n    this.transitionEndPrefix && this.stage.addEventListener(this.transitionEndPrefix, function(event, callback){\n      callback && callback();\n      this.onTransitionEnd();\n    }.bind(this));\n\n    return this;\n  }\n\n  // =========================================================\n  // Utility functions\n  // =========================================================\n\n  /**\n   * Calculates the amount to reposition the slider\n   * to move to the current activeSlideIndex. If there\n   * is a dotNav, updates the classes of the previous active\n   * dot and the new one.\n   * @return {SlipnSlider}\n   */\n  navigateToSlide() {\n    let moveTo = `${this.activeSlideIndex * this.percent}%`;\n    this.stage.style[this.transformPrefix] = `translate3d(-${moveTo},0,0)`;\n    if (this.hasDotNav) {\n      this.activeDot.className = \"\";\n      this.activeDotIndex = parseInt(this.slides[this.activeSlideIndex].dataset.jsSlideIndex);\n      this.activeDot  = this.navDots[this.activeDotIndex]\n      this.activeDot.className = this.dotIsActive;\n    }\n\n    return this;\n  }\n\n  /**\n   * Called on isInfinite mode to see if current\n   * slide is a cloned one. If so, switches to its\n   * uncloned brother\n   * @return {SlipnSlider}\n   */\n  checkForSlideSwap() {\n    if (this.atFirstSlide()) {\n      this.swapSlides(true);\n    } else if (this.atLastSlide()) {\n      this.swapSlides(false);\n    }\n    return this;\n  }\n\n  /**\n   * Handles the actual switcharoo of between a cloned\n   * slide and its brother by updated the activeSlideIndex,\n   * removes the transition time, navigates to the new slide,\n   * and restores transition time.\n   * @param  {Boolean} direction True navigates to last uncloned slide, false to first uncloned slide\n   * @return {SlipnSlider}\n   */\n  swapSlides(direction) {\n    this.activeSlideIndex = direction ? this.total - 2 : 1;\n    this.removeStageTransition()\n        .navigateToSlide()\n        .addStageTransition();\n\n    return this;\n  }\n\n  /**\n   * Sets the stage transition to 0 seconds\n   * @return {SlipnSlider}\n   */\n  removeStageTransition() {\n    this.stage.style[this.transitionPrefix] = \"all 0s\";\n    return this;\n  }\n\n  /**\n   * Sets stage transition to default value after 1ms\n   * timeout so that there is a delay when chaining\n   * @return {SlipnSlider}\n   */\n  addStageTransition() {\n    setTimeout(() => {\n      this.stage.style[this.transitionPrefix] = \"all .75s\";\n    }.bind(this), 1)\n    return this;\n  }\n\n  /**\n   * Checks to see if slider is in the first position\n   * @return {Boolean} returns true is at first position\n   */\n  atFirstSlide() {\n    return (this.activeSlideIndex === 0) ? true : false;\n  }\n\n  /**\n   * Checks to see if slider is in the last position\n   * @return {Boolean} returns true if at last position\n   */\n  atLastSlide() {\n    return (this.activeSlideIndex === this.total - 1) ? true : false;\n  }\n\n  /**\n   * Loops through the prefixes for transitionend to grab\n   * the correct prefix for the current browser. From Modernizr\n   * @return {String} transitionend prefix for current browser\n   */\n  transitionEndEvent() {\n    let t;\n    let el = document.createElement('fakeelement');\n    let transitions = {\n      'transition':'transitionend',\n      'OTransition':'oTransitionEnd',\n      'MozTransition':'transitionend',\n      'WebkitTransition':'webkitTransitionEnd'\n    }\n\n    for(t in transitions){\n      if( el.style[t] !== undefined ){\n        return transitions[t];\n      }\n    }\n  }\n\n  /**\n   * Retrieves the correct transition prefix with what\n   * exists in the users browser\n   * @return {String} Transition Prefix\n   */\n  transitionPrefix() {\n    let t;\n    let el = document.createElement('fakeelement');\n    let transitions = {\n      'transition':'transition',\n      'OTransition':'oTransition',\n      'MozTransition':'transition',\n      'WebkitTransition':'webkitTransition'\n    }\n\n    for(t in transitions){\n      if( el.style[t] !== undefined ){\n        return transitions[t];\n      }\n    }\n  }\n\n  /**\n   * Retrieves the correct transform prefix\n   * with what exists in the users browser\n   * @return {String} Transform Prefix\n   */\n  transformPrefix() {\n    let t;\n    let el = document.createElement('fakeelement');\n    let transforms = {\n      'transform':'transform',\n      'OTransform':'oTransform',\n      'MozTransform':'mozTransform',\n      'WebkitTransform':'webkitTransform'\n    }\n\n    for(t in transforms){\n      if( el.style[t] !== undefined ){\n        return transforms[t];\n      }\n    }\n  }\n\n  // =========================================================\n  // Initialization function\n  // =========================================================\n  /**\n   * Initialization function for setting up\n   * and enabling the slider\n   * @return {SlipnSlider}\n   */\n  init() {\n    this.takeUserOptions()\n        .setStage()\n        .createControls()\n        .createDots()\n        .setDataAttrs()\n        .setupInfiniteSlider()\n        .defineSizes()\n        .navigateToSlide()\n        .addStageTransition()\n        .bindTransitionEvents()\n        .addEventHandlers()\n        .enable();\n\n    return this;\n  }\n}\n"]}